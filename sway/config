
### Variables
set $mod Mod4
set $alt Mod1
set $term kitty # O tu terminal Wayland preferida (alacritty, kitty, wezterm)
set $menu rofi -show drun # O wofi --show drun / bemenu-run

# Utilice Mouse+$mod para arrastrar ventanas flotantes a la posición deseada
floating_modifier $mod

# Fuente para los titulos de ventanas y la barra (si usas swaybar)
font pango:google sans 9




# cwal: Alternativa a pywal, si la usas, asegúrate que es compatible con Wayland o configura manualmente.
# exec_always --no-startup-id cwal -r

# Wallpaper con pywal: swaybg es el comando para Sway
# La ruta del wallpaper de wal suele ser ~/.cache/wal/wal
#exec_always swaybg -i "$(< "${HOME}/.cache/wal/wal")" -m fill

bar {
    swaybar_command waybar
}
#  

# Opcional: Idle y bloqueo de pantalla
# exec swayidle -w \
#      timeout 300 'swaylock -f -c 000000' \
#      timeout 600 'swaymsg "output * dpms off"' \
#      resume 'swaymsg "output * dpms on"' \
#      before-sleep 'swaylock -f -c 000000'



# tiling_drag: No existe directamente en Sway. El arrastre de flotantes funciona con $mod + click.

### Workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+d workspace number $ws11

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+d move container to workspace number $ws11

### Resize mode
mode "resize" {
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        # En i3, ñ se representa como "ntilde". En Sway, puedes usar la tecla directamente si tu layout lo permite,
        # o el keysym "ntilde". Para estar seguros, podemos usar una tecla diferente o verificar el keysym con `xev` (en XWayland) o `wev`.
        # Por ahora, usaré 'semicolon' (;) como alternativa común para la tecla a la derecha de L.
        bindsym semicolon resize grow width 10 px or 10 ppt # Asumiendo que quieres la tecla a la derecha de L. Ajusta si es necesario.
        # Si 'ntilde' funciona:
        # bindsym ntilde resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

### Colores de Ventana
# `set_from_resource` es específico de X11.
# `wal -R` debería generar un archivo para Sway, usualmente en ~/.cache/wal/colors-sway
# Si existe, puedes incluirlo:
# include ~/.cache/wal/colors-sway

# Si no, define colores manualmente o usa los que `wal` ponga en Xresources y tradúcelos.
# Los nombres de las variables deben coincidir con los que `wal` usa en `colors-sway` o los defines tú.
# Ejemplo de placeholders (wal los sobreescribirá si `include` está activo y el archivo existe):
set $background      #282A36
set $foreground      #F8F8F2
set $cursor          #F8F8F2
set $color0          #21222C
set $color1          #FF5555
set $color2          #50FA7B
set $color3          #F1FA8C
set $color4          #BD93F9
set $color5          #FF79C6
set $color6          #8BE9FD
set $color7          #F8F8F2
set $color8          #6272A4
set $color9          #FF6E6E
set $color10         #69FF94
set $color11         #FFFFA5
set $color12         #D7ACFF
set $color13         #FF92DF
set $color14         #A4FFFF
set $color15         #FFFFFF

# Colores de borde de ventana y barra de título (si se muestra)
# client.focused          <borde> <fondo> <texto> <indicador> <borde_hijo>
client.focused          $color4 $color4 $foreground $color2   $color4
client.focused_inactive $color8 $color8 $foreground $color0   $color8
client.unfocused        $color0 $color0 $foreground $color0   $color0
client.urgent           $color1 $color1 $foreground $color1   $color1
client.placeholder      $color0 $color0 $foreground $color0   $color0
# client.background       $background # Color de fondo para ventanas XWayland si no lo establecen ellas mismas
default_border none
default_border pixel 2
### Lanzadores (Rofi)
# Rofi necesita ser compilado con soporte Wayland o usar un wrapper.
# Si no, usa wofi.
bindsym $mod+a exec $HOME/.config/rofi/sway/bin/launch.sh # Asegúrate que este script y Rofi funcionan en Wayland
bindsym $mod+x exec rofi -show run # o wofi --show run
bindsym $mod+z exec rofi -show emoji # o wofi --show emoji
bindsym $mod+Tab exec $HOME/.config/rofi/sway/bin/powermenu # Asegúrate que este script y Rofi funcionan

### Brillo
# brightnessctl funciona bien en Wayland
bindsym XF86MonBrightnessUp exec brightnessctl set +1%
bindsym XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym $mod+Shift+F12 exec brightnessctl set +5%
bindsym $mod+Shift+F11 exec brightnessctl set 5%-

### Control de Audio
# pactl funciona bien. `$refresh_i3status` no es necesario para Waybar (se actualiza solo o con señales).
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% # && pkill -SIGRTMIN+8 waybar (si waybar usa i3status y necesitas forzar)
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% # && pkill -SIGRTMIN+8 waybar
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle # && pkill -SIGRTMIN+8 waybar
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle # && pkill -SIGRTMIN+8 waybar

bindsym $mod+F10 exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+F11 exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym $mod+F12 exec pactl set-sink-volume @DEFAULT_SINK@ +1%

### Screenshots
# maim, xdotool, xclip son para X11. En Wayland se usa grim, slurp, wl-copy.
set $screenshot_dir $HOME/screenshots
exec mkdir -p $screenshot_dir # Crea el directorio si no existe

# Pantalla completa
bindsym Ctrl+Print exec grim "$screenshot_dir/screenshot-$(date +'%Y%m%d-%H%M%SZ')-all.png"
# Ventana activa (requiere jq)
bindsym $mod+Ctrl+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" "$screenshot_dir/screenshot-$(date +'%Y%m%d-%H%M%SZ')-current.png"
# Selección
bindsym Shift+Print exec grim -g "$(slurp)" "$screenshot_dir/screenshot-$(date +'%Y%m%d-%H%M%SZ')-selected.png"

## Clipboard Screenshots
# Pantalla completa al portapapeles
bindsym Print exec grim - | wl-copy -t image/png
# Ventana activa al portapapeles
bindsym $mod+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy -t image/png
# Selección al portapapeles
bindsym $mod+Shift+s exec grim -g "$(slurp)" - | wl-copy -t image/png # 's' para 'select'

### Sway Acciones
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+l exec swaynag -t warning -m '¿Realmente quieres salir de Sway?' -B 'Sí, salir' 'swaymsg exit' # 'l' de 'logout'

### Scripts personalizados
# WallSelect: Necesitará ser adaptado para usar `swaybg` o `swww` en lugar de `feh`.
bindsym $mod+w exec $HOME/.config/rofi/sway/bin/WallSelect
bindsym $mod+shift+w exec $HOME/.config/rofi/sway/bin/WallSelectlight
set $current_wallpaper_link $HOME/.config/current_wallpaper_symlink
exec_always swaybg -o '*' -i $current_wallpaper_link -m fill
bindsym $mod+s exec $HOME/.config/rofi/sway/bin/rofistyle.sh # Cambié a $mod+s por consistencia ($mod+Shift+S es screenshot)

### Aplicaciones
bindsym $mod+e exec pcmanfm # O tu gestor de archivos preferido (Thunar, Nautilus, etc.)
bindsym $mod+Return exec $term

### Matar ventana enfocada
bindsym $mod+Shift+q kill
bindsym $mod+f fullscreen 

### Dmenu (alternativa con $menu definido arriba)
bindsym $mod+p exec $menu

### Cambiar enfoque (con teclas de función, menos común)
bindsym $alt+F1 focus left
bindsym $alt+F2 focus right
# bindsym $alt+<tecla> focus down
# bindsym $alt+<tecla> focus up

### Mover ventana enfocada (con teclas de función)
bindsym $alt+$mod+F1 move left
bindsym $alt+$mod+F2 move right

### Cambiar enfoque (estilo vim o flechas)
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# Si prefieres jkl; para navegar:
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right # O $mod+ntilde si funciona

### Mover ventana enfocada (estilo vim o flechas)
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# Si prefieres jkl; para mover:
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right # O $mod+Shift+ntilde

### Layout
bindsym $mod+t split h  # Dividir horizontalmente
bindsym $mod+y split v  # Dividir verticalmente


# Cambiar layout del contenedor
#bindsym $mod+Ctrl+s layout stacking # stacking
bindsym $mod+Ctrl+w layout tabbed   # tabbed
bindsym $mod+Ctrl+e layout toggle split # alternar splitv/splith

### Ventanas Flotantes
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle # Cambiar foco entre flotante y tiling

### Reglas para ventanas específicas
# Usa `app_id` para aplicaciones Wayland nativas, `class` para XWayland.
# Puedes obtener app_id/class con: swaymsg -t get_tree | grep -E "(app_id|class)"
# for_window [app_id="pcmanfm"] floating enable
# for_window [class="(?i)Pcmanfm"] floating enable # (?i) para case-insensitive

### Foco padre/hijo (menos común, pero funciona)
# bindsym $mod+n focus parent
# bindsym $mod+b focus child


### Barra de Sway por defecto (si no usas Waybar o similar)
# bar {
#     position top
#     status_command i3status # O tu script de estado preferido
#     font pango:google sans 10
#
#     colors {
#         background $background
#         statusline $foreground
#         separator #666666
#
#         focused_workspace  $color4 $color4 $foreground
#         active_workspace   $color8 $color8 $foreground
#         inactive_workspace $color0 $color0 $foreground
#         urgent_workspace   $color1 $color1 $foreground
#         binding_mode       #FF79C6 #FF79C6 $background
#     }
# }
input type:keyboard {
    xkb_layout latam
    xkb_options grp:rctrl_toggle
}
# You can get the names of your outputs by running: swaymsg -t get_outputs

   input "10182:480:GXTP7863:00_27C6:01E0_Touchpad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
   }
bindgesture swipe:left workspace next
bindgesture swipe:right workspace prev
#gaps
gaps inner 5
gaps outer 0
bindsym $mod+shift+g exec swaymsg gaps outer all set 0 && swaymsg gaps inner all set 5 
bindsym $mod+g exec swaymsg gaps outer all set 0 && swaymsg gaps inner all set 0
